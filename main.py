import os
from dotenv import load_dotenv
import telebot
from keyboard import change_screen, change_screen_round
from telebot.types import Message, ReplyKeyboardRemove
from database import *
import re

load_dotenv()
TOKEN = os.getenv('TOKEN')

# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –±–æ—Ç–∞
bot = telebot.TeleBot(TOKEN)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def start_message(message: Message):
    chat_id = message.chat.id
    screen = get_screen_by_user_id(chat_id)
    roundd = get_round_by_user_id(chat_id)
    nickname = get_nickname_by_user_id(chat_id)
    full_name = message.from_user.full_name
    check_users_in_table(chat_id, full_name, screen)
    bot.send_message(chat_id, f"""–ü—Ä–∏–≤–µ—Ç, —É–≤–∞–∂–∞–µ–º—ã–π {nickname}! –Ø –±–æ—Ç –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á –Ω–∞ —É—Ä–∞–≤–Ω–µ–Ω–∏—è –ø—Ä—è–º–æ–π.
–í–≤–µ–¥–∏—Ç–µ 2 —á–∏—Å–ª–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª
1-–µ —á–∏—Å–ª–æ –¥–ª—è {screen.split()[0]}px, 2-–µ –¥–ª—è {screen.split()[1]}px
–û–∫—Ä—É–≥–ª–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –¥–æ {roundd} —á–∏—Å–µ–ª
–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–∫ –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è –≤—ã–±—Ä–∞–≤ –≤ –º–µ–Ω—é –∫–Ω–æ–ø–∫—É '–°–º–µ–Ω–∏—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ'""", reply_markup=change_screen())


@bot.message_handler(func=lambda message: message.text == 'üì≤ –°–º–µ–Ω–∏—Ç—å —à–∏—Ä–∏–Ω—É —ç–∫—Ä–∞–Ω–æ–≤')
def another_screen_size(message: Message):
    chat_id = message.chat.id
    msg = bot.send_message(chat_id, '–£–∫–∞–∂–∏—Ç–µ —Ä–∞–∑–º–µ—Ä —ç–∫—Ä–∞–Ω–æ–≤ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª', reply_markup=ReplyKeyboardRemove())
    bot.register_next_step_handler(msg, get_another_screen_size)


def get_another_screen_size(message: Message):
    chat_id = message.chat.id
    nickname = get_nickname_by_user_id(chat_id)
    pattern = r'^\d+\s+\d+$'  # —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ –¥–≤—É—Ö —á–∏—Å–µ–ª, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–æ–º
    if re.match(pattern, message.text):
        # –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤–∞—à –∫–æ–¥
        update_user_screen(chat_id, message.text)
        bot.send_message(chat_id, f'–†–∞–∑–º–µ—Ä —ç–∫—Ä–∞–Ω–æ–≤ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω!\n{nickname}, –≤–≤–µ–¥–∏—Ç–µ 2 —á–∏—Å–ª–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª',
                         reply_markup=change_screen())
    else:
        bot.reply_to(message, "–û—à–∏–±–∫–∞! –í–≤–µ–¥–∏—Ç–µ –¥–≤–∞ —á–∏—Å–ª–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª.")
        another_screen_size(message)

@bot.message_handler(commands=['changeround'])
def another_round(message: Message):
    chat_id = message.chat.id
    nickname = get_nickname_by_user_id(chat_id)
    msg = bot.send_message(chat_id, f'{nickname}, —É–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–Ω–∞–∫–æ–≤ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π', reply_markup=ReplyKeyboardRemove())
    bot.register_next_step_handler(msg, get_another_round)

def get_another_round(message: Message):
    chat_id = message.chat.id
    nickname = get_nickname_by_user_id(chat_id)
    pattern = r'\d'  # —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ —á–∏—Å–ª–∞ –æ—Ç 0 –¥–æ 9
    if re.match(pattern, message.text):
        # –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤–∞—à –∫–æ–¥
        update_round(chat_id, message.text)
        bot.send_message(chat_id, f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–Ω–∞–∫–æ–≤ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ {message.text}!\n{nickname}, —Ç–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ 2 —á–∏—Å–ª–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª',
                         reply_markup=change_screen())
    else:
        bot.reply_to(message, "–û—à–∏–±–∫–∞! –í–≤–µ–¥–∏—Ç–µ –æ–¥–Ω–æ —á–∏—Å–ª–æ.")
        another_round(message)

@bot.message_handler(commands=['changenickname'])
def change_nickname(message: Message):
    chat_id = message.chat.id
    msg = bot.send_message(chat_id, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ', reply_markup=ReplyKeyboardRemove())
    bot.register_next_step_handler(msg, get_nickname)

def get_nickname(message: Message):
    chat_id = message.chat.id
    try:
        update_nickname(chat_id, message.text)
        bot.send_message(chat_id, f'–û–±—Ä–∞—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ {message.text}!\n{message.text}, —Ç–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ 2 —á–∏—Å–ª–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª',
                             reply_markup=change_screen())
    except:
        bot.reply_to(message, "–û—à–∏–±–∫–∞! –í–≤–µ–¥–∏—Ç–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ –≤–∞–º, –Ω–∞–ø—Ä–∏–º–µ—Ä '–ú–∏—Å—Ç–µ—Ä'")
        change_nickname(message)

@bot.message_handler(commands=['screen'])
def get_current_screen(message: Message):
    chat_id = message.chat.id
    screen = get_screen_by_user_id(chat_id)
    roundd = get_round_by_user_id(chat_id)
    nickname = get_nickname_by_user_id(chat_id)
    bot.send_message(chat_id,
                     f'—Ç–µ–∫—É—â–∏–π —Ä–∞–∑–º–µ—Ä —ç–∫—Ä–∞–Ω–∞: {screen.split()[0]}x{screen.split()[1]}\n–û–∫—Ä—É–≥–ª–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –¥–æ {roundd}—á–∏—Å–µ–ª\n{nickname}, —Ç–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ 2 —á–∏—Å–ª–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª',
                     reply_markup=change_screen())


@bot.message_handler(func=lambda message: message.text == 'user_id')
def get_current_screen(message: Message):
    chat_id = message.chat.id
    all_users = get_all_user_id_and_full_name_quantity_round_nick()
    bot.send_message(chat_id, all_users, reply_markup=change_screen())


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(content_types=['text'])
def solve_linear_equation(message):
    chat_id = message.chat.id
    screen = get_screen_by_user_id(chat_id)
    roundd = get_round_by_user_id(chat_id)
    nickname = get_nickname_by_user_id(chat_id)
    full_name = message.from_user.full_name
    check_users_in_table(chat_id, full_name, screen)
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è A –∏ B
        ya, yb = map(float, message.text.split())

        # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —É–≥–ª–æ–≤–æ–π –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –∏ —Å–≤–æ–±–æ–¥–Ω—ã–π —á–ª–µ–Ω

        xa, xb = [int(i) for i in screen.split()]

        a_coef = (yb - ya) / (xb - xa)
        b_coef = ya - a_coef * xa

        # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
        if str(b_coef).startswith('-'):
            answer = f"{a_coef * 100:.{roundd}f}vw - {abs(b_coef):.{roundd}f}px"
        else:
            answer = f"{a_coef * 100:.{roundd}f}vw + {b_coef:.{roundd}f}px"
        update_quantity(chat_id)
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        bot.reply_to(message, answer, reply_markup=change_screen())
    except Exception as e:
        print(e)
        bot.reply_to(message, f"–û—à–∏–±–∫–∞! {nickname}, –≤–≤–µ–¥–∏—Ç–µ –¥–≤–∞ —á–∏—Å–ª–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª.")


# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
bot.infinity_polling()
